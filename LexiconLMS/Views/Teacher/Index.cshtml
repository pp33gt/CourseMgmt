@model TeacherPageViewModel
@{
    ViewData["Title"] = "Teacher Page";
}


<h5>Ongoing Courses</h5>
<ul class="list-group">
    @foreach (var item in Model.OngoingCourses)
    {
        <li class="list-group-item licolor">
            <h5> <a asp-controller="Course" asp-action="Details" asp-route-id="@item.Id">@item.Name</a></h5>
        </li>
    }
</ul>


<div class="form-group">
    <a asp-controller="Course" asp-action="Index" class="btn btn-purple">Other Courses</a>
    <a asp-controller="Course" asp-action="Create" class="btn btn-green">Create Course</a>
</div>

@if (!(Model.Assignments is null) && Model.Assignments.Count > 0)
{
<hr />
<h5>Student's assignments</h5>
<table class="table tablestyle" data-toggle="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(a => a.Assignments.FirstOrDefault().Name)</th>
            <th>@Html.DisplayNameFor(a => a.Assignments.FirstOrDefault().Owner)</th>
            <th>@Html.DisplayNameFor(a => a.Assignments.FirstOrDefault().UploadTime)</th>
            <th>Course/Module</th>
            <th>Status</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var assignment in Model.Assignments)
        {
            <tr class="table-active">
                <td><a asp-controller="ActivityDocument" asp-action="Display" asp-route-id="@assignment.Id"><i class="fas fa-file-download"></i> @assignment.Name</a></td>
                <td>@assignment.Owner.FullName</td>
                <td>@assignment.UploadTime</td>
                <td>@assignment.CourseName / @assignment.ModuleName</td>
                @if (assignment.Deadline < assignment.UploadTime)
                {
                    <td><i class="fas fa-times-circle" style="color:red"></i> Late</td>
                }
                else
                {
                    <td><i class="fas fa-check-circle" style="color:green"></i> On time</td>
                }
            </tr>
        }
    </tbody>
</table>
}
